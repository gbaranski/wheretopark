version: "3.8"
services:
  storekeeper:
    image: ghcr.io/wheretopark/storekeeper:latest
    ports:
      - "3458:8080"
    environment:
      - PORT=8080
      - STORE_URL=redis://redis
    networks:
      - net
      - traefik-public
    depends_on:
      - redis
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/health-check || exit 1
      interval: 5s
      timeout: 10s
      retries: 10
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.wheretopark-storekeeper-http.rule=Host(`${STOREKEEPER_DOMAIN?Variable not set}`)
        - traefik.http.routers.wheretopark-storekeeper-http.entrypoints=http
        - traefik.http.routers.wheretopark-storekeeper-http.middlewares=https-redirect
        - traefik.http.routers.wheretopark-storekeeper-https.rule=Host(`${STOREKEEPER_DOMAIN?Variable not set}`)
        - traefik.http.routers.wheretopark-storekeeper-https.entrypoints=https
        - traefik.http.routers.wheretopark-storekeeper-https.tls=true
        - traefik.http.routers.wheretopark-storekeeper-https.tls.certresolver=le
        - traefik.http.services.wheretopark-storekeeper.loadbalancer.server.port=8080

  providers-tristar:
   image: ghcr.io/wheretopark/providers-tristar:latest
   networks:
     - net
   environment:
     - STOREKEEPER_URL=https://${STOREKEEPER_DOMAIN}
   depends_on:
     - storekeeper

  redis:
    image: redis
    networks:
      - net


networks:
  net:
    driver: overlay
    attachable: true
  traefik-public:
    external: true
